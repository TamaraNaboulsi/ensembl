name: Testing Workflow

on:
  push:
    branches:
      - master

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    
#     services:
#       mysql:
#         image: mysql:latest
#         ports:
#           - 3306
#         env:
#           MYSQL_ALLOW_EMPTY_PASSWORD: yes
#           MYSQL_USER: "github"
#           MYSQL_PASSWORD: ""
#         options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
    
    strategy:
      matrix:
        perl: ['5.14', '5.26', '5.30']
        env: [COVERALLS=true DB=mysql, COVERALLS=false DB=mysql, COVERALLS=false DB=sqlite]
        container: ['tamaranaboulsi/test-repo:perl-5.014.004-custom']
        
        include:
          - perl: '5.30'
            container: 'tamaranaboulsi/test-repo:perl-5.030.004-custom'
            env: COVERALLS=false DB=mysql
        exclude:
          - perl: '5.14'
            env: COVERALLS=false DB=mysql
          - perl: '5.14'
            env: COVERALLS=true DB=mysql
          - perl: '5.26'
            env: COVERALLS=false DB=sqlite
          - perl: '5.26'
            env: COVERALLS=false DB=mysql
          - perl: '5.30'
            container: 'tamaranaboulsi/test-repo:perl-5.014.004-custom'
            env: COVERALLS=false DB=sqlite
          - perl: '5.30'
            container: 'tamaranaboulsi/test-repo:perl-5.014.004-custom'
            env: COVERALLS=false DB=mysql
          - perl: '5.30'
            container: 'tamaranaboulsi/test-repo:perl-5.014.004-custom'
            env: COVERALLS=true DB=mysql
    
    env:
      AUTH_TOKEN: Ju069PzB8QZG3302emIhyCEEQfVfVsiXy0nGcR6hue+vW9nE82NnOEZHbZIwUCXEjUaZRMVQ31Em70Ky22OrLK4D59bs2ClH21u8URDGD/cn7JNPGWFrgxuaXQKMQrw72doeB0+w1+ShURtqM41vITjinyU3y34RZ1NcbDwYSZI=

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
#       - name: Before Script
#         run: |
#           apt-get update
#           apt-get install -y default-libmysqlclient-dev default-mysql-client
#           apt-get install -y libssl-dev sqlite3
#          apt-get install -y build-essential cpanminus git
      
#       - name: Perl ${{ matrix.perl }} Setup
#         uses: shogo82148/actions-setup-perl@v1
#         with:
#           perl-version: ${{ matrix.perl }}
      
      - name: Clone repos
        run: |
          git clone --branch master --depth 1 https://github.com/Ensembl/ensembl-test.git
          git clone --branch master --depth 1 https://github.com/Ensembl/ensembl-io.git
          git clone --branch master --depth 1 https://github.com/Ensembl/ensembl-variation.git
          git clone --branch master --depth 1 https://github.com/Ensembl/ensembl-compara.git
          git clone -b release-1-6-924 --depth 1 https://github.com/bioperl/bioperl-live.git
      
      - uses: perl-actions/install-with-cpanm@v1
        name: Install dependencies
        with:
          cpanfile: "cpanfile"
          sudo: false
          verbose: true
          install: |
            Devel::Cover
            Devel::Cover::Report::Coveralls
            Test::Exception
            Moose
            Devel::Cycle
            Test::Warnings
            DBD::SQLite
            JSON
      
      - name: Copy mysql/sqlite conf files
        run: |
          cp travisci/MultiTestDB.conf.actions.mysql modules/t/MultiTestDB.conf.mysql
          cp travisci/MultiTestDB.conf.actions.SQLite modules/t/MultiTestDB.conf.SQLite
          cp travisci/testdb.conf.actions.mysql testdb.conf.mysql
          cp travisci/testdb.conf.actions.SQLite testdb.conf.SQLite
      
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
      - run: mysql -uroot -h127.0.0.1 -e 'SELECT version()'    
#       - name: Configure mysql
# # #         env:
# # #           MYSQL_ALLOW_EMPTY_PASSWORD: yes
# #           #DB_PORT: ${{ job.services.mysql.ports['3306'] }}
#         run: |
#           service mysql start
#           mysql -u root -h localhost -p root
#          service mysql start
#          mysqladmin -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports['3306'] }} status
#          mysql -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports['3306'] }}
#         mysql -u root

 #         sudo /usr/bin/mysql start
#          mysql -u root -h localhost
#          mysql -e "CREATE USER 'github'@'%'" -u root -h localhost -P ${{ job.services.mysql.ports['3306'] }}
#          /usr/bin/mysql start
#          sudo service mysql stop
#          sudo /etc/init.d/mysql start
#          apt update && apt install sudo
#          mysql -e 'GRANT ALL PRIVILEGES ON *.* TO "github"@"%"' -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports['3306'] }}
#          mysql -e 'SET GLOBAL local_infile=1' -u root -h 127.0.0.1 -P ${{ job.services.mysql.ports['3306'] }}
